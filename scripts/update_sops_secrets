#!/usr/bin/env bash

# 1. GLOBAL  config/secrets_(home_)_unenc  to  config/secrets(_home)
# 2. USER    profiles/[*]/secrets_unenc    to  profiles/[*]/secrets
# 3. MODULE  *.unenc.{yml,yaml}            to  *.enc.json

GIT_ADD=

encrypt() {
  [[ $3 ]] && input_type="--input-type $3"
  sops -e ${input_type} ${1} > ${2}
  [[ $GIT_ADD ]] && git add ${2}
}

encrypt_global() {
  local basepath
  basepath="config/secrets${1}"
  [[ -d $basepath ]] || return

  for f in $(ls ${basepath}_unenc); do
    fo=$(echo ${f} | awk -F"." '{print $1}').json
    encrypt "${basepath}_unenc/${f}" "${basepath}/${fo}" "binary"
  done
}

encrypt_user() {
  local basepath
  basepath="profiles/${1}/secrets"
  [[ -d $basepath ]] || return

  for f in $(ls ${basepath}_unenc); do
    fo=$(echo ${f} | awk -F"." '{print $1}').json
    encrypt "${basepath}/${f}" "${basepath}/${fo}" "binary"
  done
}

encrypt_users() {
  for p in $(ls profiles/); do
    if [[ -d profiles/$p ]] && [[ $p != "__templates" ]]; then
      encrypt_user $p
    fi
  done
}

encrypt_module() {
  local f
  local type
  f="$1"
  type=

  if [[ $(basename $f) = "secrets.unenc.yaml" ]] || [[ $(basename $f) = "secrets.unenc.yml" ]]; then
    fo="$(dirname $f)/secrets.yml"
  elif [[ ${f: -9:9} = ".unenc.yml" ]]; then
    fo="${f:0:-9}.enc.yml"
  elif [[ ${f: -10:10} = ".unenc.yaml" ]]; then
    fo="${f:0:-10}.enc.yml"
  elif [[ ${f: -5:5} = ".unenc" ]]; then
    fo="${f:0:-5}.enc.json"
    type="binary"
  else
    return
  fi

  encrypt "$f" "$fo" $type
}

encrypt_modules() {
  local files
  files=$(find modules -type f -name "*.unen*")

  for f in $files; do
    encrypt_module "$f"
  done
}

if [[ $@ ]]; then
  for i in $@; do
    encrypt_module $i
  done
else
  encrypt_global
  encrypt_global "_home"
  encrypt_users
  encrypt_modules
fi