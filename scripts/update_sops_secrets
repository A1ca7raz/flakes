#!/usr/bin/env bash

# 1. USER    profiles/[*]/secrets_unenc    to  profiles/[*]/secrets.yml
# 2. MODULE  *.unenc.{yml,yaml}            to  *.enc.json

GIT_ADD=
dryrun=
manual=

mkfo() {
  local p
  local f
  local fo
  p="$(dirname $1)"
  f="$(basename $1)"

  if [[ $f = "secrets.unenc.yml" ]] || [[ $f = "secrets.unenc.yaml" ]]; then
    fo="secrets.yml"
  elif [[ $f = "secret" ]]; then
    fo="secret.json"
  elif [[ ${f: -10:10} = ".unenc.yml" ]]; then
    fo="${f:0:-10}.enc.yml"
  elif [[ ${f: -11:11} = ".unenc.yaml" ]]; then
    fo="${f:0:-11}.enc.yml"
  elif [[ ${f: -11:11} = ".unenc.json" ]]; then
    fo="${f:0:-11}.enc.json"
  elif [[ ${f: -6:6} = ".unenc" ]] || [[ ${f: -6:6} = "_unenc" ]]; then
    fo="${f:0:-6}.enc.json"
  else
    fo="${f}.json"
  fi
  
  echo "${p}/${fo}"
}

encrypt() {
  local f
  local type
  local fo
  f="$1"

  if [[ ${f: -4:4} = ".yml" ]] || [[ ${f: -5:5} = ".yaml" ]]; then
    type=yaml
  elif [[ ${f: -5:5} = ".json" ]]; then
    type=json
  else
    type=binary
  fi

  fo=`mkfo "$1"`
  $dryrun sops -e --input-type $type --output $fo $1
  [[ $GIT_ADD ]] && $dryrun git add $fo || true
}

while [[ $# -ge 1 ]]; do
  case $1 in
    -d|--dryrun)
      shift
      dryrun=echo
      ;;
    -g|--git)
      shift
      GIT_ADD=1
      ;;
    *)
      manual=1
      encrypt $1
      shift
      ;;
  esac
done

encrypt_user() {
  local p
  p="$1"

  for f in $(find $p -type f -name "*unen*" -or -name "secret" -or -name "secrets"); do
    encrypt "$f"
  done
}

encrypt_users() {
  for p in $(find profiles/* -type d -not -name "__*"); do
    encrypt_user "$p"
  done
}

encrypt_modules() {
  local files
  files=$(find modules -type f -name "*unen*" -or -name "secrets" -or -name "secret")

  for f in $files; do
    encrypt "$f"
  done
}

if [[ ! $manual ]]; then
  encrypt_users
  encrypt_modules
fi
